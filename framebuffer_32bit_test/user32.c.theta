/**
 * user32.c
 *
 * Author: Kenta Ishii
 * License: MIT
 * License URL: https://opensource.org/licenses/MIT
 *
 */

#include "system32.h"
#include "system32.c"

int32 _user_start()
{

	String string_table_pre0 =
			"0.0,1.0,2.0,3.0,"\
			"4.0,5.0,6.0,7.0,"\
			"8.0,9.0,10.0,11.0,"\
			"12.0,13.0,14.0,15.0\0";

	// Triangle Wave, Frequency Is 8 Herts (n * (1 / Sampling Range in Seconds)), So n=8 (n is 0 to Sample Length - 1) Should Be The Highest Amplitude
	// In Autocorrelation, Frequency Is ((Sample Length / n) * (1 / Sampling Range in Seconds)), So n=64 (n is 0 to Sample Length - 1) Should Be The Highest Amplitude, However, Oscillation on Real Part Decays
	// Zero Padding Half of Length (256)
	String string_table_pre1 =
			"31.0,30.0,29.0,28.0,27.0,26.0,25.0,24.0,"\
			"23.0,22.0,21.0,20.0,19.0,18.0,17.0,16.0,"\
			"15.0,14.0,13.0,12.0,11.0,10.0, 9.0, 8.0,"\
			" 7.0, 6.0, 5.0, 4.0, 3.0, 2.0, 1.0, 0.0,"\
			" 0.0, 1.0, 2.0, 3.0, 4.0, 5.0, 6.0, 7.0,"\
			" 8.0, 9.0,10.0,11.0,12.0,13.0,14.0,15.0,"\
			"16.0,17.0,18.0,19.0,20.0,21.0,22.0,23.0,"\
			"24.0,25.0,26.0,27.0,28.0,29.0,30.0,31.0,"\
			"31.0,30.0,29.0,28.0,27.0,26.0,25.0,24.0,"\
			"23.0,22.0,21.0,20.0,19.0,18.0,17.0,16.0,"\
			"15.0,14.0,13.0,12.0,11.0,10.0, 9.0, 8.0,"\
			" 7.0, 6.0, 5.0, 4.0, 3.0, 2.0, 1.0, 0.0,"\
			" 0.0, 1.0, 2.0, 3.0, 4.0, 5.0, 6.0, 7.0,"\
			" 8.0, 9.0,10.0,11.0,12.0,13.0,14.0,15.0,"\
			"16.0,17.0,18.0,19.0,20.0,21.0,22.0,23.0,"\
			"24.0,25.0,26.0,27.0,28.0,29.0,30.0,31.0,"\
			"31.0,30.0,29.0,28.0,27.0,26.0,25.0,24.0,"\
			"23.0,22.0,21.0,20.0,19.0,18.0,17.0,16.0,"\
			"15.0,14.0,13.0,12.0,11.0,10.0, 9.0, 8.0,"\
			" 7.0, 6.0, 5.0, 4.0, 3.0, 2.0, 1.0, 0.0,"\
			" 0.0, 1.0, 2.0, 3.0, 4.0, 5.0, 6.0, 7.0,"\
			" 8.0, 9.0,10.0,11.0,12.0,13.0,14.0,15.0,"\
			"16.0,17.0,18.0,19.0,20.0,21.0,22.0,23.0,"\
			"24.0,25.0,26.0,27.0,28.0,29.0,30.0,31.0,"\
			"31.0,30.0,29.0,28.0,27.0,26.0,25.0,24.0,"\
			"23.0,22.0,21.0,20.0,19.0,18.0,17.0,16.0,"\
			"15.0,14.0,13.0,12.0,11.0,10.0, 9.0, 8.0,"\
			" 7.0, 6.0, 5.0, 4.0, 3.0, 2.0, 1.0, 0.0,"\
			" 0.0, 1.0, 2.0, 3.0, 4.0, 5.0, 6.0, 7.0,"\
			" 8.0, 9.0,10.0,11.0,12.0,13.0,14.0,15.0,"\
			"16.0,17.0,18.0,19.0,20.0,21.0,22.0,23.0,"\
			"24.0,25.0,26.0,27.0,28.0,29.0,30.0,31.0,"\
			"0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,"\
			"0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,"\
			"0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,"\
			"0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,"\
			"0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,"\
			"0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,"\
			"0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,"\
			"0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,"\
			"0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,"\
			"0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,"\
			"0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,"\
			"0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,"\
			"0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,"\
			"0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,"\
			"0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,"\
			"0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,"\
			"0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,"\
			"0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,"\
			"0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,"\
			"0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,"\
			"0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,"\
			"0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,"\
			"0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,"\
			"0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,"\
			"0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,"\
			"0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,"\
			"0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,"\
			"0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,"\
			"0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,"\
			"0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,"\
			"0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,"\
			"0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0\0";

	String string_table_pre2 =
			"0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,"\
			"0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,"\
			"0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,"\
			"0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,"\
			"0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,"\
			"0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,"\
			"0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,"\
			"0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,"\
			"0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,"\
			"0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,"\
			"0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,"\
			"0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,"\
			"0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,"\
			"0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,"\
			"0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,"\
			"0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,"\
			"0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,"\
			"0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,"\
			"0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,"\
			"0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,"\
			"0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,"\
			"0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,"\
			"0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,"\
			"0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,"\
			"0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,"\
			"0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,"\
			"0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,"\
			"0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,"\
			"0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,"\
			"0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,"\
			"0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,"\
			"0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,"\
			"0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,"\
			"0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,"\
			"0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,"\
			"0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,"\
			"0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,"\
			"0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,"\
			"0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,"\
			"0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,"\
			"0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,"\
			"0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,"\
			"0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,"\
			"0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,"\
			"0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,"\
			"0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,"\
			"0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,"\
			"0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,"\
			"0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,"\
			"0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,"\
			"0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,"\
			"0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,"\
			"0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,"\
			"0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,"\
			"0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,"\
			"0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,"\
			"0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,"\
			"0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,"\
			"0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,"\
			"0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,"\
			"0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,"\
			"0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,"\
			"0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,"\
			"0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0\0";

	// For IFFT of Power Spectrum
	String string_table_pre3 =
			"0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,"\
			"0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,"\
			"0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,"\
			"0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,"\
			"0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,"\
			"0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,"\
			"0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,"\
			"0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,"\
			"0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,"\
			"0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,"\
			"0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,"\
			"0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,"\
			"0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,"\
			"0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,"\
			"0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,"\
			"0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,"\
			"0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,"\
			"0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,"\
			"0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,"\
			"0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,"\
			"0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,"\
			"0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,"\
			"0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,"\
			"0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,"\
			"0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,"\
			"0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,"\
			"0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,"\
			"0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,"\
			"0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,"\
			"0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,"\
			"0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,"\
			"0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,"\
			"0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,"\
			"0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,"\
			"0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,"\
			"0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,"\
			"0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,"\
			"0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,"\
			"0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,"\
			"0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,"\
			"0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,"\
			"0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,"\
			"0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,"\
			"0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,"\
			"0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,"\
			"0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,"\
			"0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,"\
			"0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,"\
			"0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,"\
			"0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,"\
			"0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,"\
			"0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,"\
			"0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,"\
			"0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,"\
			"0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,"\
			"0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,"\
			"0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,"\
			"0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,"\
			"0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,"\
			"0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,"\
			"0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,"\
			"0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,"\
			"0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,"\
			"0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0\0";

	/*
	obj table0 = cvt32_string_to_farray( string_table_pre0, str32_strlen( string_table_pre0 ) );
	String string_table0 = cvt32_farray_to_string( table0, 1, 8, 0 );
	print32_set_caret( print32_string( string_table0, FB32_X_CARET, FB32_Y_CARET, str32_strlen( string_table0 ) ) );
	print32_set_caret( print32_string( "\n\0", FB32_X_CARET, FB32_Y_CARET, 1 ) );

	fft32_change_order( table0, 16 );

	String string_table01 = cvt32_farray_to_string( table0, 1, 8, 0 );
	print32_set_caret( print32_string( string_table01, FB32_X_CARET, FB32_Y_CARET, str32_strlen( string_table01 ) ) );
	print32_set_caret( print32_string( "\n\0", FB32_X_CARET, FB32_Y_CARET, 1 ) );

	print32_set_caret( print32_string( "\n\0", FB32_X_CARET, FB32_Y_CARET, 1 ) );

	obj table1 = fft32_make_table( 16, 16, false );
	String string_table1 = cvt32_farray_to_string( table1, 1, 8, 0 );
	print32_set_caret( print32_string( string_table1, FB32_X_CARET, FB32_Y_CARET, str32_strlen( string_table1 ) ) );
	print32_set_caret( print32_string( "\n\0", FB32_X_CARET, FB32_Y_CARET, 1 ) );

	obj table2 = fft32_make_table( 16, 16, true );
	String string_table2 = cvt32_farray_to_string( table2, 1, 8, 0 );
	print32_set_caret( print32_string( string_table2, FB32_X_CARET, FB32_Y_CARET, str32_strlen( string_table2 ) ) );
	print32_set_caret( print32_string( "\n\0", FB32_X_CARET, FB32_Y_CARET, 1 ) );

	print32_set_caret( print32_string( "\n\0", FB32_X_CARET, FB32_Y_CARET, 1 ) );

	ObjArray table3 = fft32_make_table2d( 8, true );

	String string_table3 = cvt32_farray_to_string( table3[0], 1, 8, 0 );
	print32_set_caret( print32_string( string_table3, FB32_X_CARET, FB32_Y_CARET, str32_strlen( string_table3 ) ) );
	print32_set_caret( print32_string( "\n\0", FB32_X_CARET, FB32_Y_CARET, 1 ) );
	String string_table4 = cvt32_farray_to_string( table3[1], 1, 8, 0 );
	print32_set_caret( print32_string( string_table4, FB32_X_CARET, FB32_Y_CARET, str32_strlen( string_table4 ) ) );
	print32_set_caret( print32_string( "\n\0", FB32_X_CARET, FB32_Y_CARET, 1 ) );
	String string_table5 = cvt32_farray_to_string( table3[2], 1, 8, 0 );
	print32_set_caret( print32_string( string_table5, FB32_X_CARET, FB32_Y_CARET, str32_strlen( string_table5 ) ) );
	print32_set_caret( print32_string( "\n\0", FB32_X_CARET, FB32_Y_CARET, 1 ) );

	print32_set_caret( print32_string( "\n\0", FB32_X_CARET, FB32_Y_CARET, 1 ) );
	*/

	/**
	 * FFT Test
	 */

	// Preset
	obj in_real = cvt32_string_to_farray( string_table_pre1, str32_strlen( string_table_pre1 ) );
	obj in_imag = cvt32_string_to_farray( string_table_pre2, str32_strlen( string_table_pre2 ) );
	obj in_imag_power = cvt32_string_to_farray( string_table_pre3, str32_strlen( string_table_pre3 ) );
	ObjArray tables_sin = fft32_make_table2d( 512, false );
	ObjArray tables_cos = fft32_make_table2d( 512, true );
//print32_debug( (uint32)tables_sin, 500, 488 );
//print32_debug( (uint32)tables_cos, 500, 500 );
	//fft32_window_han( in_real, 512, tables_cos[0] ); // Causes N=1's Higher Amplitude
	//fft32_window_han( in_imag, 512, tables_cos[0] ); // Causes N=1's Higher Amplitude
	//fft32_window_hamming( in_real, 512, tables_cos[0] );
	//fft32_window_hamming( in_imag, 512, tables_cos[0] );

	// One Set of FFT
	fft32_fft( in_real, in_imag, 9, tables_sin, tables_cos );
	fft32_change_order( in_real, 512 );
	fft32_change_order( in_imag, 512 );
	fft32_coefficient( in_real, 512 );
	fft32_coefficient( in_imag, 512 );

	// Make Power Spectrum
	fft32_powerspectrum( in_real, in_imag, 512 );

	// Display FFT Value
	String string_in_real = cvt32_farray_to_string( in_real, 1, 8, 0 );
	//String string_in_imag = cvt32_farray_to_string( in_imag, 1, 8, 0 );
	print32_set_caret( print32_string( string_in_real, FB32_X_CARET, FB32_Y_CARET, str32_strlen( string_in_real ) ) );
	print32_set_caret( print32_string( "\n\0", FB32_X_CARET, FB32_Y_CARET, 1 ) );
	//print32_set_caret( print32_string( string_in_imag, FB32_X_CARET, FB32_Y_CARET, str32_strlen( string_in_imag ) ) );
	//print32_set_caret( print32_string( "\n\0", FB32_X_CARET, FB32_Y_CARET, 1 ) );

	// IFFT
	//fft32_ifft( in_real, in_imag, 9, tables_sin, tables_cos );
	//fft32_change_order( in_real, 512 );
	//fft32_change_order( in_imag, 512 );

	// Power Spectrum's IFFT to Make Autocorrelation
	//fft32_ifft( in_real, in_imag_power, 9, tables_sin, tables_cos );
	//fft32_change_order( in_real, 512 );
	//fft32_change_order( in_imag_power, 512 );

	// Display IFFT Value
	//String string_in_real_i = cvt32_farray_to_string( in_real, 1, 8, 0 );
	//String string_in_imag_i = cvt32_farray_to_string( in_imag, 1, 8, 0 );
	//print32_set_caret( print32_string( string_in_real_i, FB32_X_CARET, FB32_Y_CARET, str32_strlen( string_in_real_i ) ) );
	//print32_set_caret( print32_string( "\n\0", FB32_X_CARET, FB32_Y_CARET, 1 ) );
	//print32_set_caret( print32_string( string_in_imag_i, FB32_X_CARET, FB32_Y_CARET, str32_strlen( string_in_imag_i ) ) );
	//print32_set_caret( print32_string( "\n\0", FB32_X_CARET, FB32_Y_CARET, 1 ) );

	// Highest Index for Power Spectrum
	// Sample Length Divided By 2 Because of Nyquist Rate
	// n=0 Is Omitted, n=0 Is Aperiodic (Non-periodic) in Fourier Transform
	// n=1 (1hz) Is Omitted
	uint32 index = fft32_index_highest( in_real + 2 * 4, 256 - 2 ); // Offset 8 Bytes to Omit n=0 and n=1
	print32_set_caret( print32_number( index + 2, FB32_X_CARET, FB32_Y_CARET, 8 ) );
	print32_set_caret( print32_string( "\n\0", FB32_X_CARET, FB32_Y_CARET, 1 ) );

	while(True) {

	}

	return EXIT_SUCCESS;
}
